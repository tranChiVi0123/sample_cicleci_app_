version: 2.1

executors:
  ruby-heroku:
    docker: 
      - image: circleci/ruby:2.7.3-node-browsers
      - image: circleci/mysql:5.7
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_ROOT_HOST: "%"
      BUNDLER_VERSION: 2.0.2
      RAILS_ENV: "test"
jobs:
  build:
    executor: ruby-heroku
    #自身のアプリディレクトリ名を設定
    working_directory: ~/sample_app

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.0.2
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: mv ./config/database.yml.ci ./config/database.yml

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      # Database setup
      - run:
          name: Databasesetup
          command: |
            bundle exec rake db:create
            bundle exec rake db:migrate
        # bundle exec rake db:schema:load

      # run tests!
      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      # - deploy:
      #     name: Deploy Master to Production
      #     command: |
      #       if [ "${CIRCLE_BRANCH}}" == "master" ]; then
      #         git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:master
      #       fi
  
  deploy-build-push:
    executor: ruby-heroku
    working_directory: ~/sample_app
    
    steps:
      - checkout
      - deploy:
          name: Deploy Master to Production
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:master
            fi

workflows:
  version: 2
  build-test:
    jobs:
      - build
  deploy_to_production:
    jobs:
      - deploy-build-push:
         filters:
           branches:
              only: master